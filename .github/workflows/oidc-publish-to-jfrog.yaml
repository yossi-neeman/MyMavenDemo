name: "oidc publish to jfrog"

on: [ push ]
permissions:
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          # JFrog platform url (for example: https://acme.jfrog.io)
          JF_URL: ${{ vars.ARTIFACTORY_URL }}
        with:
          # Name of the OIDC provider as specified on the OIDC integration page in the JFrog Platform
          oidc-provider-name: mymavendemo

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'  # use 'adopt' or 'zulu' if preferred

      - run: echo "ðŸŽ‰ Run make build."
      - name: Build
        run: |
          make build

      - name: Build Docker image
        run: |
          docker build -t yossin-docker-image:latest .
          
      - name: Push Docker image to Artifactory
        run: |
          jf rt docker-push yossin-docker-image:latest us1a-my-docker-local/yossin-docker-image:latest

#      - run: echo "ðŸŽ‰ Deploy to artifactory."
#      - name: Deploy to artifactory
#        run: |
#          # export BUILD_MODULE="yossin-odic-publish-demo"
#          jf rt upload "/home/runner/work/MyMavenDemo/MyMavenDemo/target/MyDemo-0.0.1-SNAPSHOT.jar" yossin-local-maven/oidc-poc-$(date +%Y%m%d%H%M%S) # --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER --module $BUILD_MODULE
#
#      - run: echo "ðŸŽ‰ Publish to artifactory."
#      - name: Publish Build to Artifactory
#        run: |
#          jf rt build-publish
#          jf rt bdi c --max-builds=1
#
#      - name: Run JFrog CLI
#        run: |
#          # Ping the server
#          jf rt ping
#          # Collect environment variables for the build
#          jf rt bce
#          # Collect VCS details from git and add them to the build
#          jf rt bag
#          # Publish build info
#          jf rt bp
